name: Flutter CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write  # ✅ даёт GITHUB_TOKEN право создавать релизы

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.1'

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
            .packages
            .flutter-plugins
            .flutter-plugins-dependencies
            bin/cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Get dependencies
        run: flutter pub get

      - name: Apply auto-fixes
        run: dart fix --apply

      - name: Analyze
        run: flutter analyze || true

      - name: Run tests with coverage
        run: flutter test --coverage || true

      - name: Upload test coverage
        uses: actions/upload-artifact@v4.3.1
        with:
          name: test-coverage
          path: coverage/lcov.info

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Generate version string and patch pubspec.yaml
        id: versioning
        run: |
          BASE_VERSION=$(grep '^version:' pubspec.yaml | cut -d '+' -f 1 | cut -d ' ' -f 2)
          BUILD_NUMBER=$(git rev-list --count HEAD)
          VERSION="$BASE_VERSION+$BUILD_NUMBER"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          sed -i "s/^version:.*/version: $VERSION/" pubspec.yaml
          echo "🔢 Set version to $VERSION"

      - name: Build APK
        run: flutter build apk --release

      - name: Upload Artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Create GitHub Release
        if: github.event_name == 'push'  # ✅ релиз — только при push
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.versioning.outputs.VERSION }}
          name: Release v${{ steps.versioning.outputs.VERSION }}
          files: build/app/outputs/flutter-apk/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
